function [allScans, miller]=ESRF_read_spec(filename,scans)
% Function defined by Leonardo 
%filename is the name of the file, WITH THE PATH. should be a .spec
%scans is a character vector with the numbers. You can generate it with
%e.g. num2str([1 2 3 4]);
% or ['1 2 3 4']
%allScans is a matrix with:
%[energy1 rixs1 energy2 rixs2 ...]

%miller contains the miller indices

[data_all,colname_all,motval_all,motname_all,date] = myspecread_multiple_2020(filename,scans);

allScans = zeros(length(data_all{1}(:,1)), length(data_all)*2);
for ii=1:length(data_all)
    %for each scan 
    
    if sum(strcmp(colname_all{ii}, 'Energy'))>0.1
        indEnergy = find(strcmp(colname_all{ii}, 'Energy'));
    elseif sum(strcmp(colname_all{ii}, 'Energy (eV)'))>0.1
        indEnergy = find(strcmp(colname_all{ii}, 'Energy (eV)'));
    else
        indEnergy = find(strcmp(colname_all{ii}, ' Pixel'));
    end
    indSPC = find(strcmp(colname_all{ii}, 'SPC'));
    indMirror = find(strcmp(colname_all{ii}, 'Mirror current / 1e6'));
    
%     indH= find(strcmp(motname_all{ii}(1,1:124), 'H'));
%     indK = find(strcmp(motname_all{ii}(1,1:124), 'K'));
%     indL = find(strcmp(motname_all{ii}(1,1:124), 'L'));

    indH = 122;
    indK = 123;
    indL = 124;
    
    energy = data_all{ii}(:,indEnergy);
    SPC = data_all{ii}(:,indSPC);
    normal = data_all{ii}(:,indMirror);
    
    H(ii,1) = motval_all{ii}(indH);
    K(ii,1) = motval_all{ii}(indK);
    L(ii,1) = motval_all{ii}(indL);
    
    miller = [H,K,L];
    if length(energy)>=size(allScans,1)
%         allScans(:,ii*2-1:ii*2) = [-flip(energy(1:size(allScans,1))), flip(SPC(1:size(allScans,1)))./normal(1:size(allScans,1))];
        allScans(:,ii*2-1:ii*2) = [energy(1:size(allScans,1)), SPC(1:size(allScans,1))./normal(1:size(allScans,1))];
        
    elseif length(energy)<size(allScans,1)
        allScans = allScans(1:length(energy),:);
%         allScans(:,ii*2-1:ii*2) = [-flip(energy), flip(SPC)./normal];
        allScans(:,ii*2-1:ii*2) = [energy, SPC./normal];
        
    end
    
end

end
%--------------------------------------------------------------------------
%-------------SpecRead   - Davide Betto RIXS version ----------------------
%--------------------------------------------------------------------------
function [data_all,colname_all,motval_all,motname_all,date]=myspecread_multiple_2020(filename,scans)
%
%function [data,com,col_names,motor_names,motor_values]=myspecread(filename,[scan])
%
%Read scans in SPEC files and save them into MATLAB cell.
%Save scans headers in coms cells.
%


tic

fid=fopen(filename);
F=fread(fid);FS=char(F');
data_all = {};
colname_all = {};
motval_all = {};
motname_all = {};

scans = strsplit(scans,' ');

for ii=1:length(scans)
    scan = scans(ii);
    [scanint,decimal] = strtok(scan,'.');
    scanint = cell2mat(scanint);
    fposSc=strfind(FS,['#S ' num2str(scanint) ' ']);
    if(strcmp(decimal,''))
        fposSc = fposSc(1);
    else
        decimal = cell2mat(decimal);
        decimal = str2num(decimal(2:end));
        fposSc=fposSc(decimal);
    end
    
    fseek(fid,fposSc-1,-1);
    tmppos=ftell(fid);
    
    fposL=strfind(FS(tmppos:end),'#L')+tmppos-1;
    fposSnext=strfind(FS(tmppos+2:end),'#S')+tmppos+1;
    if(isempty(fposSnext))
        fposSnext = length(FS);
    end
    
    %-------------------------------------------
    %------------SpecMot------------------------
    %--------------------------------------------
    fseek(fid,fposSc-1,-1);
    tmppos=ftell(fid);
    fposS1=strfind(FS(tmppos:end),'#P0')+tmppos-1;
    
    
    %---get motor names-----------------------------
    fposO=strfind(FS(1:end),'#O0');
    motname=[];
    fseek(fid,fposO(1)-1,-1);
    counter=0;
    while ftell(fid)<min([fposS1])-1
        tmpmot=fgetl(fid);
        counter=counter+1;
        if counter<=10
            motname=[motname tmpmot(4:end) ' '];
        else
            motname=[motname tmpmot(5:end) ' '];
        end
    end
    motname = strtrim(motname);
    motname=strsplit(motname,'  ');
    
    
    %---get motor values-----------------------------
    fseek(fid,fposSc-1,-1);
    tmppos=ftell(fid);
    
    fposP0=strfind(FS(tmppos:end),'#P0')+tmppos-1;
    fposN=strfind(FS(tmppos:end),'#N')+tmppos-1;
    
    motval=[];
    fseek(fid,fposP0(1)-1,-1);
    counter=0;
    while ftell(fid)<fposN(1)-1
        tmpmot=fgetl(fid);
        if strfind(tmpmot,'#P')
            counter=counter+1;
            if counter<=10
                motval=[motval tmpmot(4:end) ' '];
            else
                motval=[motval tmpmot(5:end) ' '];
            end
        end
    end
    
    motval = strtrim(motval);
    motval=strsplit(motval,' ');
    tmpval=[];
    for i=1:length(motval);
        tmpval=[tmpval str2double(motval{i})];
    end
    motval=tmpval;
    
    
    %---- Get first column headers ----
    
    fseek(fid,fposSc-1,'bof');
    com=fgetl(fid);
    fprintf('Read scan number %i ',str2double(com(3:6)));
    date=fgetl(fid);
    fprintf('measured on %s %s at %s\n',date(4:13),date(end-3:end),date(15:end-5));
    
    
    %----...and the counters names #L ----
    
    if fposL(1)~=0
        
        fseek(fid,fposL(1)-1,-1);
        colname=fgetl(fid);
        %     colname=strsplit(colname(4:end),' ');
        colname = regexp(colname(4:end), '  +', 'split');
        
        %-----Read data -------------------
        
        st=ftell(fid);ed=fposSnext(1)-1;
        if st>ed
            data=[];
        else
            Ftmp=char(fread(fid,ed-st)');
            fposC=strfind(Ftmp,'#');
            
            if isempty(fposC)
                data=str2num(Ftmp);
            else
                fposC=[fposC length(Ftmp)];
                %--read first block
                data=str2num(Ftmp(1:fposC-1));
                %--read the others if any
                for l=1:length(fposC)-1
                    fseek(fid,fposC(l)+st-1,-1);
                    fgetl(fid);
                    rest=ftell(fid)-st;
                    data=[data;str2num(Ftmp(rest+1:fposC(l+1)-1))];
                end
            end
        end
    else
        data=[];
        
    end
    %-----------------------------
    data_all{ii} = data;
    motname_all{ii} = motname;
    motval_all{ii} = motval;
    colname_all{ii} = colname;
end
et=toc;
fprintf('Time elapsed: %f sec\n',et);

fclose(fid);


end